{"remainingRequest":"D:\\Projects\\blog_admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\blog_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\blog_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\blog_admin\\src\\components\\ColumnManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\blog_admin\\src\\components\\ColumnManagement.vue","mtime":1563285017648},{"path":"D:\\Projects\\blog_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\blog_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\blog_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\blog_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAllCategory, updateCategory, deleteCategory, batchDeleteCategory } from '@/utils/api';\nexport default {\n  name: 'ColumnManagement',\n  data: function data() {\n    return {\n      multipleSelection: [],\n      showEdit: [],\n      tableData: []\n    };\n  },\n  computed: {\n    isShow: function isShow() {\n      return this.multipleSelection.length > 0;\n    }\n  },\n  methods: {\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    handleEdit: function handleEdit(index) {\n      this.$set(this.showEdit, index, true);\n    },\n    handleSave: function handleSave(row, index) {\n      var _this = this;\n\n      updateCategory(row.id, row).then(function (response) {\n        if (response.data.status === 'success') {\n          _this.tableData = _this.tableData.map(function (item) {\n            if (item.id === row.id) {\n              item = row;\n\n              _this.$set(_this.showEdit, index, false);\n            }\n\n            return item;\n          });\n        }\n      }).catch(function (error) {\n        _this.$message.error('更新失败');\n\n        console.log(error);\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this2 = this;\n\n      deleteCategory(row.id).then(function (response) {\n        if (response.data.status === 'success') {\n          _this2.tableData.forEach(function (item, index) {\n            if (item.id === row.id) {\n              _this2.tableData.splice(index, 1);\n            }\n          });\n        }\n      }).catch(function (error) {\n        _this2.$message.error('删除失败');\n\n        console.log(error);\n      });\n    },\n    deleteAllSelect: function deleteAllSelect() {\n      var _this3 = this;\n\n      var ids = [];\n      this.multipleSelection.forEach(function (item) {\n        ids.push(item.id);\n      });\n      batchDeleteCategory(ids).then(function (response) {\n        if (response.data.status === 'success') {\n          _this3.tableData = _this3.tableData.filter(function (item) {\n            return !_this3.multipleSelection.includes(item);\n          });\n        }\n      }).catch(function (error) {\n        _this3.$message.error('批量删除失败');\n\n        console.log(error);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    getAllCategory().then(function (response) {\n      _this4.tableData = response.data;\n    });\n  }\n};",{"version":3,"sources":["ColumnManagement.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <el-table\r\n        :data=\"tableData\"\r\n        style=\"width: 100%\"\r\n        :default-sort = \"{prop: 'date', order: 'descending'}\"\r\n        @selection-change=\"handleSelectionChange\"\r\n      >\r\n        <el-table-column\r\n          type=\"selection\"\r\n          width=\"55\"\r\n        />\r\n        <el-table-column\r\n          prop=\"id\"\r\n          label=\"ID\"\r\n          width=\"80\"\r\n        />\r\n        <el-table-column\r\n          prop=\"title\"\r\n          label=\"标题\"\r\n          width=\"120\"\r\n          sortable\r\n        >\r\n          <template slot-scope=\"scope\">\r\n              <el-input\r\n                v-if=\"showEdit[scope.$index]\"\r\n                v-model=\"scope.row.name\"\r\n                @keyup.enter.native=\"handleSave(scope.row, scope.$index)\"\r\n              >\r\n            </el-input>\r\n            <span v-else>{{scope.row.name}}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"date\"\r\n          label=\"日期\"\r\n          sortable>\r\n          <template slot-scope=\"scope\">\r\n            <el-input\r\n              v-if=\"showEdit[scope.$index]\"\r\n              v-model=\"scope.row.url\"\r\n              @keyup.enter.native=\"handleSave(scope.row, scope.$index)\"\r\n            >\r\n            </el-input>\r\n            <span v-else>{{scope.row.url}}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          fixed=\"right\"\r\n          label=\"操作\"\r\n          width=\"200\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              @click=\"handleEdit(scope.$index)\"\r\n            >编辑</el-button>\r\n            <el-button\r\n              size=\"small\"\r\n              type=\"danger\"\r\n              @click=\"handleDelete(scope.row)\"\r\n            >删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <div class=\"delete-all-btn\">\r\n      <el-button type=\"danger\" size=\"small\" @click=\"deleteAllSelect\" v-show=\"isShow\">批量删除</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAllCategory, updateCategory, deleteCategory, batchDeleteCategory } from '@/utils/api'\r\n\r\nexport default {\r\n  name: 'ColumnManagement',\r\n  data () {\r\n    return {\r\n      multipleSelection: [],\r\n      showEdit: [],\r\n      tableData: []\r\n    }\r\n  },\r\n  computed: {\r\n    isShow () {\r\n      return this.multipleSelection.length > 0\r\n    }\r\n  },\r\n  methods: {\r\n    handleSelectionChange (val) {\r\n      this.multipleSelection = val\r\n    },\r\n    handleEdit (index) {\r\n      this.$set(this.showEdit, index, true)\r\n    },\r\n    handleSave (row, index) {\r\n      updateCategory(row.id, row)\r\n        .then(response => {\r\n          if (response.data.status === 'success') {\r\n            this.tableData = this.tableData.map(item => {\r\n              if (item.id === row.id) {\r\n                item = row\r\n                this.$set(this.showEdit, index, false)\r\n              }\r\n              return item\r\n            })\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('更新失败')\r\n          console.log(error)\r\n        })\r\n    },\r\n    handleDelete (row) {\r\n      deleteCategory(row.id)\r\n        .then(response => {\r\n          if (response.data.status === 'success') {\r\n            this.tableData.forEach((item, index) => {\r\n              if (item.id === row.id) {\r\n                this.tableData.splice(index, 1)\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('删除失败')\r\n          console.log(error)\r\n        })\r\n    },\r\n    deleteAllSelect () {\r\n      const ids = []\r\n      this.multipleSelection.forEach(item => {\r\n        ids.push(item.id)\r\n      })\r\n      batchDeleteCategory(ids)\r\n        .then(response => {\r\n          if (response.data.status === 'success') {\r\n            this.tableData = this.tableData.filter(item => !this.multipleSelection.includes(item))\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('批量删除失败')\r\n          console.log(error)\r\n        })\r\n    }\r\n  },\r\n  mounted () {\r\n    getAllCategory().then(response => {\r\n      this.tableData = response.data\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.delete-all-btn {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}